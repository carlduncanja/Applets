@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

:root {
  --background: oklch(1 0 0);
  --foreground: oklch(0.09 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.09 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.09 0 0);
  --primary: oklch(0.09 0 0);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.96 0 0);
  --secondary-foreground: oklch(0.09 0 0);
  --muted: oklch(0.96 0 0);
  --muted-foreground: oklch(0.45 0 0);
  --accent: oklch(0.96 0 0);
  --accent-foreground: oklch(0.09 0 0);
  --destructive: oklch(0.5 0.22 25);
  --destructive-foreground: oklch(0.98 0 0);
  --border: oklch(0.9 0 0);
  --input: oklch(0.9 0 0);
  --ring: oklch(0.4 0 0);
  --radius: 0.5rem;
}

.dark {
  --background: oklch(0.09 0 0);
  --foreground: oklch(0.98 0 0);
  --card: oklch(0.09 0 0);
  --card-foreground: oklch(0.98 0 0);
  --popover: oklch(0.09 0 0);
  --popover-foreground: oklch(0.98 0 0);
  --primary: oklch(0.98 0 0);
  --primary-foreground: oklch(0.09 0 0);
  --secondary: oklch(0.18 0 0);
  --secondary-foreground: oklch(0.98 0 0);
  --muted: oklch(0.18 0 0);
  --muted-foreground: oklch(0.65 0 0);
  --accent: oklch(0.18 0 0);
  --accent-foreground: oklch(0.98 0 0);
  --destructive: oklch(0.5 0.22 25);
  --destructive-foreground: oklch(0.98 0 0);
  --border: oklch(0.27 0 0);
  --input: oklch(0.27 0 0);
  --ring: oklch(0.35 0 0);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply bg-background text-foreground;
  }

  .min-h-screen-ios {
    min-height: 100vh;
  }

  .h-screen-ios {
    height: 100vh;
  }

  /* Custom markdown styling for chat bubbles */
  .prose {
    --tw-prose-body: inherit;
    --tw-prose-headings: inherit;
    --tw-prose-links: inherit;
    --tw-prose-bold: inherit;
    --tw-prose-counters: inherit;
    --tw-prose-bullets: inherit;
    --tw-prose-code: inherit;
    --tw-prose-pre-code: inherit;
    --tw-prose-pre-bg: rgba(0, 0, 0, 0.05);
    --tw-prose-quotes: inherit;
  }

  .dark .prose {
    --tw-prose-pre-bg: rgba(255, 255, 255, 0.05);
  }

  .prose :where(p):not(:where([class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .prose :where(p):first-child:not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(p):last-child:not(:where([class~="not-prose"] *)) {
    margin-bottom: 0;
  }

  .prose :where(ul, ol):not(:where([class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    padding-left: 1.5em;
  }

  .prose :where(li):not(:where([class~="not-prose"] *)) {
    margin-top: 0.25em;
    margin-bottom: 0.25em;
  }

  .prose :where(code):not(:where([class~="not-prose"] *)) {
    background: var(--tw-prose-pre-bg);
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background: var(--tw-prose-pre-bg);
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .prose :where(pre code):not(:where([class~="not-prose"] *)) {
    background: transparent;
    padding: 0;
  }

  .prose :where(strong):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
  }

  .prose :where(h1, h2, h3, h4, h5, h6):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
    margin-top: 1em;
    margin-bottom: 0.5em;
  }

  .prose :where(h1):first-child:not(:where([class~="not-prose"] *)),
  .prose :where(h2):first-child:not(:where([class~="not-prose"] *)),
  .prose :where(h3):first-child:not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(blockquote):not(:where([class~="not-prose"] *)) {
    border-left: 2px solid currentColor;
    padding-left: 1em;
    opacity: 0.8;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
}
